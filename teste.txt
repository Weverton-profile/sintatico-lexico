program exemplo;
  type
    meutipo = integer;

  var
  x, y: meutipo;
  z: boolean;

  procedure p1(v,v2:id1);
      var teste: v;
      begin
          v1 := + p1 * p2 = p3;
      end;
  function p1(v,v2:id1):id1;
      type teste = char;
      begin
          v2 := -5;
      end;
begin

  @@ teste de atribuição
  variavelteste := 10 * 19 + 10 <= 11 * 12 + 13;
  outravariavelteste += 10 * 10 + 15 >= 11 * 12 + 13;
  @@ teste de chamada de atribuição com chamada de função
  maisumavariavel *= + teste(37 * 10 + 10 <> 11 * 12 + 13);

  @@ teste de chamada de procedimento
  chamadandoprocedimento(10 * 10 + 10 <= 10 * 10 + 157 , 
  158 * 10 + 10 <= 10 * 10 + 15);

  @@ teste de if else encadeado com outro if else
  if 10 * 10 + 10 <= 10 * 10 + 16 then
    if 10 * 10 + 10 <= 10 * 10 + 15 then
      variavelteste := + 1;
    else
      outravariavelteste := +1;
  else
    if 10 * 10 + 10 <= 10 * 10 + 15 then
      variavelteste := + 1;
    else
      outravariavelteste := +1;

  @@ teste de while com blocos de if else
  while 10 * 10 + 10 <= 11 * 12 + 13 do

    if 10 * 10 + 10 <= 10 * 10 + 15 then
      if 10 * 10 + 10 <= 10 * 10 + 15 then
        variavelteste := + 1;
      else
        outravariavelteste := +1;
    else
      if 10 * 10 + 10 <= 10 * 10 + 15 then
        variavelteste := + 1;
      else
        outravariavelteste := +1;
end